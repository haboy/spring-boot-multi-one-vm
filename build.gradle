/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'albert' at '16-10-18 上午11:15' with Gradle 3.0
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.0/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/
buildscript {
    ext {
        springCloudVersion = 'Camden.RELEASE'
        springBootVersion = '1.4.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    version = "0.0.1.SNAPSHOT"
}

subprojects {
    apply plugin: "spring-boot"
    apply plugin: "idea"
    apply plugin: "eclipse"

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    def defaultEncoding = 'UTF-8'
    tasks.withType(AbstractCompile).each { it.options.encoding = defaultEncoding }

    javadoc {
        options.encoding = defaultEncoding
        options.addBooleanOption('Xdoclint:none', true)
    }

    test {
        include "**/model/**", "**/controller/**", "**/usecase/**", "**/util/**", "**/context/**"
    }

    springBoot {
        executable = true
    }

    repositories {
        jcenter()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
        }
    }

    dependencies {
        compile "org.projectlombok:lombok:1.16.8"
        compile "org.springframework.cloud:spring-cloud-starter-eureka"
        compile "org.springframework.boot:spring-boot-starter-web"
        compile "org.springframework.boot:spring-boot-starter-actuator"
        testCompile "org.projectlombok:lombok:1.16.8"
        testCompile "org.springframework.boot:spring-boot-starter-test"
    }
}

project(':micro-common') {
    dependencies {
        compile "org.springframework.cloud:spring-cloud-starter-eureka-server"
        compile "org.springframework.cloud:spring-cloud-config-server"
        compile "org.springframework.cloud:spring-cloud-starter-zuul"
    }
}

project(':service-consumer1') {
    dependencies {
        compile "org.springframework.cloud:spring-cloud-starter-feign"
    }
}

project(':service-provider') {
    dependencies {
        compile "org.springframework.cloud:spring-cloud-config-client"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = "3.0"
}